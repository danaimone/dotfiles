# Modern zsh configuration
# Based on work-config setup, optimized for macOS development

# Show system info on new shell (only if not in tmux and fastfetch is available)
if [[ -z "$TMUX" ]] && command -v fastfetch &> /dev/null; then
    fastfetch
fi

# Initialize tools
eval "$(starship init zsh)"
eval "$(zoxide init zsh)"

# Environment variables
export EDITOR="nvim"
export SUDO_EDITOR="$EDITOR"
export PGHOST="/var/run/postgresql"

# Path configuration
export PATH=$PATH:/usr/local/go/bin
export PATH="${ASDF_DATA_DIR:-$HOME/.asdf}/shims:$HOME/.local/share/omarchy/bin:$PATH"

# History configuration
HISTFILE=~/.history
HISTSIZE=10000
SAVEHIST=50000
setopt inc_append_history

# Enable completion
autoload -U compinit && compinit -u

# Modern CLI tool aliases
if command -v eza &> /dev/null; then
    alias ls="eza --icons"
    alias ll="eza --icons -la"
    alias tree="eza --tree"
fi

if command -v bat &> /dev/null; then
    alias cat="bat"
fi

if command -v rg &> /dev/null; then
    alias grep="rg"
fi

# Core aliases (matching work config style)
alias v="nvim"
alias vim="nvim"
alias c="clear"
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."

# Git aliases
alias g="git"
alias gs="git status"
alias ga="git add"
alias gc="git commit"
alias gp="git push"
alias gl="git log --oneline --graph --decorate"
alias gd="git diff"
alias gb="git branch"
alias gco="git checkout"
alias lg="lazygit"

# Docker aliases (from original config)
alias d="docker"
alias dc="docker-compose"
alias dps="docker ps"
alias dka='docker kill $(docker ps -q) 2>/dev/null || echo "No containers to kill"'

# Custom functions
cdls() { cd "$@" && ls; }
mkcd() { mkdir -p "$@" && cd "$@"; }

# Chezmoi aliases for easy dotfile editing
alias ce="chezmoi edit"
alias ca="chezmoi apply"
alias ccd="cd ~/.local/share/chezmoi"

# Set up fzf key bindings and fuzzy completion
source <(fzf --zsh)

# Mise activation
if [[ -f ~/.local/bin/mise ]]; then
  eval "$(~/.local/bin/mise activate zsh)"
fi

# Custom tmux session function
new_tmux () {
  session_dir=$(zoxide query --list | fzf)
  session_name=$(basename "$session_dir")

  if tmux has-session -t $session_name 2>/dev/null; then
    if [ -n "$TMUX" ]; then
      tmux switch-client -t "$session_name"
    else
      tmux attach -t "$session_name"
    fi
    notification="tmux attached to $session_name"
  else
    if [ -n "$TMUX" ]; then
      tmux new-session -d -c "$session_dir" -s "$session_name" && tmux switch-client -t "$session_name"
      notification="new tmux session INSIDE TMUX: $session_name"
    else
      tmux new-session -c "$session_dir" -s "$session_name"
      notification="new tmux session: $session_name"
    fi
  fi

  if [ -s "$session_name" ]; then
    notify-send "$notification"
  fi
}

alias tm=new_tmux

# Node Version Manager
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

# Go configuration
export GOPATH="$HOME/go"
export PATH="$PATH:$GOPATH/bin"

# Rust configuration
if [ -f "$HOME/.cargo/env" ]; then
    source "$HOME/.cargo/env"
fi

# Python configuration
export PATH="$HOME/.local/bin:$PATH"

# Load custom aliases if they exist
[[ -s "$HOME/.bash_aliases" ]] && source "$HOME/.bash_aliases"

# Load zsh plugins (managed by chezmoi via .chezmoiexternal.toml)
# Syntax highlighting
if [ -f ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]; then
    source ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
fi

# Autosuggestions
if [ -f ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh ]; then
    source ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
fi

# History substring search (bind keys immediately after sourcing)
if [ -f ~/.oh-my-zsh/custom/plugins/zsh-history-substring-search/zsh-history-substring-search.zsh ]; then
    source ~/.oh-my-zsh/custom/plugins/zsh-history-substring-search/zsh-history-substring-search.zsh
    # Bind arrow keys for history substring search
    bindkey '^[[A' history-substring-search-up
    bindkey '^[[B' history-substring-search-down
    bindkey '^P' history-substring-search-up
    bindkey '^N' history-substring-search-down
fi

# Vi mode with better key bindings
bindkey -v
bindkey '^R' history-incremental-search-backward

# Auto-start tmux for interactive shells
if [[ -z "$TMUX" ]] && [[ $- == *i* ]] && command -v tmux &> /dev/null; then
    tmux new-session -A -s main
fi

